version: '3.8'  # Version de Docker Compose

services:
  redis:
    image: "redis:alpine"
    networks:
      - app-network
    command: ["redis-server", "--bind", "0.0.0.0"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis-data:/data

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"   # Port RabbitMQ pour les communications
      - "15672:15672" # Port pour l'interface de gestion RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  backend:
    build:
      context: ./backend  # Répertoire contenant le Dockerfile pour le backend
    ports:
      - "5000:5000"  # Mappe le port local 5000 au port du conteneur
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq  # Utilisation du nom du service comme nom d'hôte
      - REDIS_HOST=redis        # Utilisation du nom du service comme nom d'hôte

  consumer:
    build:
      context: ./consumer  # Répertoire contenant le Dockerfile pour le consumer
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq  # Utilisation du nom du service comme nom d'hôte
      - REDIS_HOST=redis        # Utilisation du nom du service comme nom d'hôte

  frontend:
    build:
      context: ./frontend  # Répertoire contenant le Dockerfile pour le frontend
    ports:
      - "80:80"  # Mappe le port local 80 au port du conteneur
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq-data:
  redis-data:
